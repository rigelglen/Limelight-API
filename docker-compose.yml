version: "3"
services:

  pyml:
    container_name: pyml
    restart: unless-stopped
    image: registry.gitlab.com/mirandajyothy/limelight_api/limelight_api_pyml:latest
    env_file:
      - .env
    build:
      context: ./ml
      dockerfile: Dockerfile
    networks:
      - mainnet
    ports:
      - "3001:3001"
    volumes:
      - ./ml:/usr/app/

  app:
    container_name: api
    restart: unless-stopped
    image: registry.gitlab.com/mirandajyothy/limelight_api/limelight_api_app:latest
    env_file:
      - .env
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "3002:8080"
    networks:
      - mainnet
    volumes:
      - ./api:/usr/app/
      - /usr/app/node_modules
    depends_on:
      - mongo
      - pyml
      - redis

  app-test:
    container_name: api-test
    image: registry.gitlab.com/mirandajyothy/limelight_api/limelight_api_app_test:latest
    restart: "no"
    env_file:
      - .env
    environment:
      - APP_ENV=test
    build:
      context: ./api
      dockerfile: Dockerfile
    networks:
      - mainnet
    volumes:
      - ./api:/usr/app/
      - /usr/app/node_modules
    depends_on:
      - mongo
      - pyml
      - redis

  mongo:
    container_name: mongo
    restart: unless-stopped
    image: mongo:4.1
    env_file:
      - .env
    ports:
      - "27018:27017"
    volumes:
      - mongodata:/data/db
    networks:
      - mainnet

  redis:
    container_name: redis
    restart: unless-stopped
    image: 'bitnami/redis:latest'
    command: /run.sh --maxmemory 100mb --maxmemory-policy allkeys-lru
    env_file:
      - .env
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/bitnami/redis/data
    networks:
      - mainnet

networks:
  mainnet:

volumes:
  mongodata:    
  redisdata:
  